

// 자바스크립트 언어 기본 특성
// 1. 자바스크립트는 기본적으로 비동기 프로그래밍 방식으로 작동됨


// Activity1
function fn1(){
    console.log('========>fn1');
};

// Activity2: 해당함수를 실행하는데 2초란 시간이 걸림
function fn2(cb){

    // 지정한 시간 후에 해당 함수가 실행됨
    // fn2 함수가 호출되면 2초를 기다렸다가 내부 함수 실행
    // 즉 fn2라는 로그가 fn2() 함수가 호출된 후 2초 후에 출력됨
    setTimeout(function(){
        console.log('========>fn2');

        // fn2()의 모든 기능이 완료되면 fn3()함수를 호출해 함수 실행 순서를 지켜가며 프로그래밍한다
        // fn3();
        cb();
    }, 2000);
};

// Activity3
function fn3(){
    console.log('========>fn3');
};

// Activity3-1
function fn31(){
    console.log('========>fn31');
};

// task1: fn1()+fn2()+fn3()
// 의도: fn의 순서와 상관없이 fn1,2,3가 무조건 실행만 되면 짱인 경우가 있고
// fn1 후에 fn2가 반드시 실행되고 fn3가 실행되어야 하는 경우도 있다(업무 프로세스)
// fn1();
// fn2();
// fn3();

// task2: 순서를 지켜가면서 비지니스 로직을 구현해야 하는 경우
// fn1();
// fn2();

// task3: 함수안에서 특정 함수를 호출해서 작업의 우선순위를 조절하면 함수가 바뀌거나 함수의 조건이 바뀌면
// 매번 해당 함수의 기능을 변경해줘야함
// 자바스크립트 함수는 객체로 인식한다
fn1();
fn2(fn31);